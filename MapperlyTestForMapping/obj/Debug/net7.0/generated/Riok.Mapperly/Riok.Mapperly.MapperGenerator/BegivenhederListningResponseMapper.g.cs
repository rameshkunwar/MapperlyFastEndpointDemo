// <auto-generated />
#nullable enable
namespace MapperlyTestForMapping.MappingProfiles
{
    public static partial class BegivenhederListningResponseMapper
    {
        public static partial global::MapperlyTestForMapping.DTO.BegivenhederResponseDto MapBegivenhederReadOnlyToDto(global::MapperlyTestForMapping.Models.BegivenhederResponse begivenhederResponse)
        {
            var target = new global::MapperlyTestForMapping.DTO.BegivenhederResponseDto();
            target.ItemsFetched = begivenhederResponse.ItemsFetched;
            target.BegivenhederForListningVindue = MapToList(begivenhederResponse.BegivenhederReadOnly);
            return target;
        }

        private static global::MapperlyTestForMapping.DTO.BegivenhederForListningVindue MapToBegivenhederForListningVindue(global::MapperlyTestForMapping.Models.BegivenhederReadOnly source)
        {
            var target = new global::MapperlyTestForMapping.DTO.BegivenhederForListningVindue();
            if (source.Updated != null)
            {
                target.Updated = source.Updated.Value;
            }

            target.Id = source.Id;
            target.Headline = source.Headline;
            target.Stoftype = source.Stoftype;
            target.Prioritet = source.Prioritet;
            target.NewsValue = source.NewsValue;
            target.Created = source.Created;
            target.PublishDate = source.PublishDate;
            target.PublishTime = source.PublishTime;
            target.BegivenhederParentId = source.BegivenhederParentId;
            target.DaekkerId = source.DaekkerId;
            return target;
        }

        private static global::System.Collections.Generic.List<global::MapperlyTestForMapping.DTO.BegivenhederForListningVindue> MapToList(global::System.Collections.Generic.List<global::MapperlyTestForMapping.Models.BegivenhederReadOnly> source)
        {
            var target = new global::System.Collections.Generic.List<global::MapperlyTestForMapping.DTO.BegivenhederForListningVindue>(source.Count);
            foreach (var item in source)
            {
                target.Add(MapToBegivenhederForListningVindue(item));
            }

            return target;
        }
    }
}